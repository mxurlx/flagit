package utils

import (
	"fmt"
	"os"
	"path/filepath"
	"strings"
)

func GenCmdMap(filePath string, flags map[string]map[string][]string) error {
	err := os.MkdirAll(filepath.Join(filePath, "cmd"), 0755)
	if err != nil {
		return fmt.Errorf("error: failed to create generated directory: %w", err)
	}
	outputPath := filepath.Join("cmd", "cmdfuncs.go")

	file, err := os.Create(outputPath)

	if err != nil {
		return err
	}
	defer file.Close()

	file.WriteString("// Generated by gencmdmap.go. DO NOT EDIT.\n\n")
	file.WriteString("package cmd\n\n")
	file.WriteString("var CmdFuncs = map[string]func(flags map[string]any, mandatoryArgs []string) error{\n")

	for cmd := range flags {
		if cmd == "." {
			file.WriteString(fmt.Sprintf("\t%q: %s,\n", cmd, "Root"))
			continue
		}
		file.WriteString(fmt.Sprintf("\t%q: %s,\n", cmd, strings.ToUpper(string(cmd[0]))+cmd[1:]))
	}
	file.WriteString("}\n")

	fmt.Println("cmdfuncs.go generated successfully")
	return nil
}
